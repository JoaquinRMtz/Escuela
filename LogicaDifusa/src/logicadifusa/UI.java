package logicadifusa;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import org.math.plot.Plot2DPanel;

/**
 *
 * @author RAMMARJ
 */
public class UI extends javax.swing.JFrame implements ChangeListener {

    private static final Connection CNN = new MySqlConnection().getConnection();

    /**
     * Creates new form UI
     */
    public UI() {
        super("Lógica difusa: altura de personas");
        initComponents();
        slBajo.addChangeListener(this);
        slMedio.addChangeListener(this);
        slAlto.addChangeListener(this);
        lblSlBajo.setText("Bajo (" + slBajo.getValue() + " cm)");
        lblSlMedio.setText("Medio (" + slMedio.getValue() + " cm)");
        lblSlAlto.setText("Alto (" + slAlto.getValue() + " cm)");

        Plot2DPanel plot2DPanel = new Plot2DPanel();
        plot2DPanel.addBarPlot("aaa", new double[]{0, 7});

        pnlContGrafica.add(plot2DPanel);
        pnlContGrafica.repaint();

        try {
            llenarTabla();
        } catch (Exception ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void llenarTabla() throws Exception {
        Statement createStatement = CNN.createStatement();
        ResultSet executeQuery = createStatement.executeQuery("SELECT * FROM personas");
        DefaultTableModel model = (DefaultTableModel) this.tblDatos.getModel();
        while (executeQuery.next()) {
            String id = executeQuery.getString("id");
            String nombre = executeQuery.getString("nombre");
            String app = executeQuery.getString("apellido_paterno");
            String apm = executeQuery.getString("apellido_materno");
            String alt = executeQuery.getString("altura");

            model.addRow(new Object[]{id, nombre, app, apm, alt, ""/*altura class*/});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        slAlto = new javax.swing.JSlider();
        lblTitExperiencia = new javax.swing.JLabel();
        slMedio = new javax.swing.JSlider();
        slBajo = new javax.swing.JSlider();
        lblSlBajo = new javax.swing.JLabel();
        lblSlMedio = new javax.swing.JLabel();
        lblSlAlto = new javax.swing.JLabel();
        pnlContGrafica = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos a clasificar"));

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nombre", "Apellido paterno", "Apellido materno", "Altura (cm)", "Clasificacion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDatos);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Injección de experiencia"));

        slAlto.setMajorTickSpacing(2);
        slAlto.setMaximum(200);
        slAlto.setMinimum(100);
        slAlto.setMinorTickSpacing(2);
        slAlto.setOrientation(javax.swing.JSlider.VERTICAL);
        slAlto.setPaintTicks(true);
        slAlto.setSnapToTicks(true);
        slAlto.setValue(190);

        lblTitExperiencia.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitExperiencia.setText("Clasifique las alturas respecto a los centímetros");

        slMedio.setMajorTickSpacing(2);
        slMedio.setMaximum(200);
        slMedio.setMinimum(100);
        slMedio.setOrientation(javax.swing.JSlider.VERTICAL);
        slMedio.setPaintTicks(true);
        slMedio.setValue(160);

        slBajo.setMajorTickSpacing(2);
        slBajo.setMaximum(200);
        slBajo.setMinimum(100);
        slBajo.setOrientation(javax.swing.JSlider.VERTICAL);
        slBajo.setPaintTicks(true);
        slBajo.setSnapToTicks(true);
        slBajo.setToolTipText("");
        slBajo.setValue(130);
        slBajo.setDoubleBuffered(true);

        lblSlBajo.setText("Bajo");

        lblSlMedio.setText("Medio");

        lblSlAlto.setText("Alto");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitExperiencia)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(slBajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSlBajo))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(slMedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(lblSlMedio)))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSlAlto)
                            .addComponent(slAlto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitExperiencia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSlBajo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSlMedio))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(slBajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(slMedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblSlAlto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(slAlto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pnlContGrafica.setBorder(javax.swing.BorderFactory.createTitledBorder("Grafica de resultados"));

        javax.swing.GroupLayout pnlContGraficaLayout = new javax.swing.GroupLayout(pnlContGrafica);
        pnlContGrafica.setLayout(pnlContGraficaLayout);
        pnlContGraficaLayout.setHorizontalGroup(
            pnlContGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlContGraficaLayout.setVerticalGroup(
            pnlContGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 138, Short.MAX_VALUE)
        );

        jButton1.setText("Comenzar clasificación");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlContGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlContGrafica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        clasificar();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSlAlto;
    private javax.swing.JLabel lblSlBajo;
    private javax.swing.JLabel lblSlMedio;
    private javax.swing.JLabel lblTitExperiencia;
    private javax.swing.JPanel pnlContGrafica;
    private javax.swing.JSlider slAlto;
    private javax.swing.JSlider slBajo;
    private javax.swing.JSlider slMedio;
    private javax.swing.JTable tblDatos;
    // End of variables declaration//GEN-END:variables

    @Override
    public void stateChanged(ChangeEvent e) {
        JSlider s = (JSlider) e.getSource();
        if (s == slBajo) {
            int maxVal = slMedio.getValue() - MAX_DIFF;
            if (slBajo.getValue() > maxVal) {
                slBajo.setValue(maxVal);
            }
            lblSlBajo.setText("Bajo (" + slBajo.getValue() + " cm)");//mostrar valores
        } else if (s == slMedio) {
            int minVal = slBajo.getValue() + MAX_DIFF;
            int maxVal = slAlto.getValue() - MAX_DIFF;
            if (slMedio.getValue() < minVal) {
                slMedio.setValue(minVal);
            } else if (slMedio.getValue() > maxVal) {
                slMedio.setValue(maxVal);
            }
            lblSlMedio.setText("Medio (" + slMedio.getValue() + " cm)");//mostrar valores
        } else { //alto
            int minVal = slMedio.getValue() + MAX_DIFF;
            if (slAlto.getValue() < minVal) {
                slAlto.setValue(minVal);
            }
            lblSlAlto.setText("Alto (" + slAlto.getValue() + " cm)");//mostrar valores
        }

        clasificar();
    }

    private static final int MAX_DIFF = 15;

    private void clasificar() {                
        //obtener los datos de experiencia
        int alturaBaja = this.slBajo.getValue();
        int alturaMedia = this.slMedio.getValue();
        int alturaAlt = this.slAlto.getValue();

        int limAlturaMediaBaja = (alturaBaja + alturaMedia) / 2;
        int limAlturaMediaAlta = (alturaMedia + alturaAlt) / 2;

        Clasificador bajo = new Clasificador(this.slBajo.getMinimum(), limAlturaMediaBaja);
        Clasificador medio = new Clasificador(limAlturaMediaBaja, limAlturaMediaAlta);
        Clasificador alto = new Clasificador(limAlturaMediaAlta, this.slAlto.getMaximum());

        System.out.println("Intervalo altura baja: "+bajo);
        System.out.println("Intervalo altura media: "+medio);
        System.out.println("Intervalo Alto: "+alto);
        
        int rowCount = this.tblDatos.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            int altura = Integer.parseInt(this.tblDatos.getValueAt(i, 4).toString());
            //clasificar
            String clase = "baja";
            if (alto.evaluar(altura)) {
                clase = "alto";
            }
            else if (medio.evaluar(altura)) {
                clase = "medio";
            }
            //obvio si no entra en las anteriores es de estatura baja
            //mostrar en la tabla la clasificación
            this.tblDatos.setValueAt(clase, i, 5);
        }
    }
}
